class ActionRow {
  constructor() {
    this.component = {
      type: 1,
      components: []
    }
  }

  addComponent(component) {
    if(component instanceof Button || component instanceof Select) component = component.build()
    if(component.type === 1) throw new Error('You cannot add an action row to a component')
    if(this.component.components.length > 0 && this.component.components[0].type !== component.type) {
      throw new Error('Component type must be the same')
    }
    if(this.component.components.length == 5 && this.component.components[0].type === 2) {
      throw new Error('Maximum of 5 button components allowed')
    }
    if(this.component.components.length == 1 && this.component.components[0].type === 3) {
      throw new Error('Maximum of 1 select components allowed')
    }
    this.component.components.push(component)
    return this
  }

  build() {
    return this.component
  }

  async send(Webhook) {
    return Webhook.send({components: [this.build()]})
  }
}

class Button {
  constructor(label, url = null) {
    this.component = {
      type: 2,
      label: label,
      style: 5
    }
    if(url) {
      this.component.url = url
    }
  }

  setLabel(label) {
    this.component.label = label
    return this
  }

  setURL(url) {
    this.component.url = url
    return this
  }

  build() {
    return this.component
  }
}

class Select {
  constructor(placeholder) {
    this.component = {
      type: 3,
      options: [],
      placeholder: placeholder ? placeholder : 'Select an option',
      disabled: false
    }
  }

  setPlaceholder(placeholder) {
    this.component.placeholder = placeholder
    return this
  }

  setId(id) {
    if(id.length > 100) throw new Error('ID must be 100 characters or less')
    this.component.custom_id = id
    return this
  }

  addOption(label, value, description = '', emoji = "ðŸ”¥", selected = false) {
    this.component.options.push({
      label: label,
      value: value,
      description: description,
      emoji: {id: null, name: emoji},
      selected: selected
    })
    return this
  }

  setMinValues(min) {
    this.component.min_values = min
    return this
  }

  setMaxValues(max) {
    this.component.max_values = max
    return this
  }

  setDisabled(disabled) {
    this.component.disabled = disabled
    return this
  }
}

module.exports = { ActionRow, Button, Select }